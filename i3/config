# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod4
set $monitor1 "HDMI-0"
set $monitor2 "VGA-0"
#bindsym $mod+m exec --no-startup-id sh ~/.config/i3/screencheck.sh $monitor1 $monitor2

# Configure border style <normal|1pixel|pixel xx|none|pixel>
 #for_window [class=".*"] border pixel 2

# Hide borders <none|vertical|horizontal|both|smart>
hide_edge_borders none

# change borders
bindsym $mod+n border none
bindsym $mod+b border pixel 2
bindsym $mod+m border normal


# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
#font xft:URWGothic-Demi 11
#font xft:URWGothic-Book 11
#font pango:monospace 11
font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
font pango:FontAwesome 11
#font pango:DejaVu Sans Mono 11

focus_follows_mouse no

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# Before i3 v4.8, we used to recommend this one as the default:
# font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
# The font above is very space-efficient, that is, it looks good, sharp and
# clear in small sizes. However, its unicode glyph coverage is limited, the old
# X core fonts rendering does not support right-to-left and this being a bitmap
# font, it doesn’t scale on retina/hidpi displays.

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec i3-sensible-terminal

# kill focused window
bindsym $mod+Shift+q kill

# start dmenu (a program launcher)
#bindsym $mod+d exec dmenu_run
#bindsym $mod+d exec --no-startup-id "rofi -modi window,windowcd,drun,run -show drun"
bindsym $mod+d exec --no-startup-id rofi -show drun
bindsym $mod+Tab exec --no-startup-id rofi -show window
#exec --no-startup-id kupfer
# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
#bindsym $mod+d exec --no-startup-id i3-dmenu-desktop

exec --no-startup-id volumeicon
#bindsym $mod+Ctrl+m exec terminal -e 'alsamixer'
# Increase/decrease sink volume 1
bindsym $mod+F1 exec amixer -qD pulse set Master toggle; exec notify-send 'sound toggled'
bindsym $mod+F2 exec amixer -qc 0 set Master 2db-; exec notify-send 'volume decreased'
bindsym $mod+F3 exec amixer -qc 0 set Master 2db+; exec notify-send 'volume increased'


# change focus
#bindsym $mod+j focus left
#bindsym $mod+k focus down
bindsym $mod+l exec --no-startup-id i3lock --c 000000
#bindsym $mod+semicolon focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+j move left
bindsym $mod+Shift+k move down
bindsym $mod+Shift+l move up
bindsym $mod+Shift+semicolon move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+h split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+Shift+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1:   Terminal "
set $ws2 "2:   Chromium "
set $ws3 "3:   Windows "
set $ws4 "4:   Files "
set $ws5 "5:   Code "
set $ws6 "6:   Settings "
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# switch to workspace
bindsym $mod+1 workspace $ws1
bindsym $mod+2 workspace $ws2
bindsym $mod+3 workspace $ws3; exec [ $(ps h -C VirtualBoxVM | grep -v "autohide" | wc -l) = 0 ] && /usr/lib/virtualbox/VirtualBoxVM --comment "Windows" --startvm "{c88a328e-3371-49bc-b955-387ba5ec5910}"
bindsym $mod+4 workspace $ws4; exec [ $(ps h -C thunar | grep -v "autohide" | wc -l) = 0 ] && thunar
bindsym $mod+5 workspace $ws5; exec [ $(ps h -C code | grep -v "autohide" | wc -l) = 0 ] && code
bindsym $mod+6 workspace $ws6
bindsym $mod+7 workspace $ws7
bindsym $mod+8 workspace $ws8
bindsym $mod+9 workspace $ws9
bindsym $mod+0 workspace $ws10

workspace $ws3 output $monitor1

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $ws1
bindsym $mod+Shift+2 move container to workspace $ws2
bindsym $mod+Shift+3 move container to workspace $ws3
bindsym $mod+Shift+4 move container to workspace $ws4
bindsym $mod+Shift+5 move container to workspace $ws5
bindsym $mod+Shift+6 move container to workspace $ws6
bindsym $mod+Shift+7 move container to workspace $ws7
bindsym $mod+Shift+8 move container to workspace $ws8
bindsym $mod+Shift+9 move container to workspace $ws9
bindsym $mod+Shift+0 move container to workspace $ws10

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym j resize shrink width 10 px or 10 ppt
        bindsym k resize grow height 10 px or 10 ppt
        bindsym l resize shrink height 10 px or 10 ppt
        bindsym semicolon resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

assign [class="^Chromium$"] → $ws2
assign [class="^VirtualBox$"] → $ws3
for_window [class="^VirtualBox$"] floating enable border none

#exec --no-startup-id pamac-tray

exec --no-startup-id xrandr --output HDMI-0 --auto --primary --mode 1920x1080 --pos 1600x100 --right-of VGA-0 --output VGA-0 --auto --noprimary --mode 1600x900 --pos 0x0
exec_always --no-startup-id "setxkbmap -model pc104 -layout us,ru -variant ,, -option grp:alt_shift_toggle"

#exec conky -c ~/.config/i3/conky_numix
exec --no-startup-id feh --bg-scale /usr/share/backgrounds/manjaro-wallpapers-18.0/manjaro-cat.jpg

#exec --no-startup-id i3-msg 'workspace $ws2; append_layout /home/magy/.config/i3/workspace-1.json'

exec --no-startup-id i3-msg 'workspace $ws1; exec chromium; workspace $ws2'
exec_always --no-startup-id numlockx on
#exec --no-startup-id nm-applet

bindsym Print exec scrot '%Y-%m-%d-%s_screenshot_$wx$h.jpg' -e 'mv $f ~/Изображения/'

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
	output $monitor2
        tray_output none
        colors {
        background  #212121
        statusline  #dddddd
        separator   #666666
        # class             border  backgr. text
        focused_workspace   #2b83a6 #2b83a6 #ffffff
        active_workspace    #212121 #212121 #ffffff
        inactive_workspace  #212121 #212121 #86888c
        urgent_workspace    #d64e4e #d64e4e #ffffff
        binding_mode        #229c56 #229c56 #ffffff
        }
}

bar {
	#font pango:FontAwesome-11 11
	output $monitor1
        status_command i3blocks -c ~/.config/i3/i3blocks.conf
	#tray_output primary
	colors {
        background  #212121
        statusline  #dddddd
        separator   #666666
        # class             border  backgr. text
        focused_workspace   #2b83a6 #2b83a6 #ffffff
        active_workspace    #212121 #212121 #ffffff
        inactive_workspace  #212121 #212121 #86888c
        urgent_workspace    #d64e4e #d64e4e #ffffff
        binding_mode        #229c56 #229c56 #ffffff
	}
}
#exec --no-startup-id nm-applet
#exec ~/.config/i3/lemonbar.sh  

# Theme colors
set $bdrcolor #4d4949
set $bgicolor #373737
set $bgucolor #6a6868
set $txtacolor #F9FAF9
set $txtucolor #bdbbbb
set $indcolor #00ff00

# set variable for main accent color
#set $acolour #eb564d

# class                   border  backgr. text    indic.   child_border
  #client.focused          $bdrcolor $acolour $txtacolor $indcolor
  #client.focused_inactive $bdrcolor $bgicolor $txtacolor $indcolor
  #client.unfocused        $bdrcolor $bgucolor $txtucolor $indcolor
  #client.urgent           #CB4B16 #FDF6E3 #CB4B16 $indcolor
  #client.placeholder      #000000 #0c0c0c $txtacolor #000000
  client.background       #2B2C2B

#############################
### settings for i3-gaps: ###
#############################

for_window [class="^.*"] border pixel 1
gaps inner 10 
gaps outer 5
smart_gaps on
smart_borders on

exec_always compton --config ~/.config/i3/compton.conf

# Set inner/outer gaps
#gaps inner 6
#gaps outer -6

# Additionally, you can issue commands with the following syntax. This is useful to 

# gaps inner|outer current|all set|plus|minus <px>
# gaps inner all set 10
# gaps outer all plus 5

# Smart gaps (gaps used if only more than one container on the workspace)
#smart_gaps on

# Smart borders (draw borders around container only if it is not the only container on 

# on|no_gaps (on=always activate and no_gaps=only activate if the gap size to the edge 
#smart_borders on

# Press $mod+Shift+g to enter the gap mode. Choose o or i for modifying outer/inner 

#set $mode_gaps Gaps: (o) outer, (i) inner
#set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
#set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)
#bindsym $mod+Shift+g mode "$mode_gaps"

mode "$mode_gaps" {
        bindsym o      mode "$mode_gaps_outer"
        bindsym i      mode "$mode_gaps_inner"
        bindsym Return mode "default"
        bindsym Escape mode "default"
}
mode "$mode_gaps_inner" {
        bindsym plus  gaps inner current plus 5
        bindsym minus gaps inner current minus 5
        bindsym 0     gaps inner current set 0

        bindsym Shift+plus  gaps inner all plus 5
        bindsym Shift+minus gaps inner all minus 5
        bindsym Shift+0     gaps inner all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
}
mode "$mode_gaps_outer" {
        bindsym plus  gaps outer current plus 5
        bindsym minus gaps outer current minus 5
        bindsym 0     gaps outer current set 0

        bindsym Shift+plus  gaps outer all plus 5
        bindsym Shift+minus gaps outer all minus 5
        bindsym Shift+0     gaps outer all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
}

